{"ast":null,"code":"import _slicedToArray from \"/Users/Nukae/Desktop/LAMBDA/User-Onboarding/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Nukae/Desktop/LAMBDA/User-Onboarding/src/components/Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form as FormikForm, Field, withFormik } from 'formik';\nimport axios from 'axios';\nimport * as Yup from 'yup';\nimport \"../App.css\";\n\nconst Form = ({\n  errors,\n  touched,\n  status,\n  values\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  useEffect(() => {\n    if (status) {\n      setUsers(users => [...users, status]);\n    }\n  }, [status]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"User Form\"), React.createElement(FormikForm, {\n    className: \"user-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Username:\", React.createElement(Field, {\n    type: \"text\",\n    name: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), touched.username && errors.username && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, errors.username)), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Name:\", React.createElement(Field, {\n    type: \"text\",\n    name: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), touched.name && errors.name && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, errors.name)), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Role:\", React.createElement(Field, {\n    component: \"select\",\n    name: \"role\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Select a Role\"), React.createElement(\"option\", {\n    value: \"Newbie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Full Stack Developer\"), React.createElement(\"option\", {\n    value: \"dev\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Software Developer\"), React.createElement(\"option\", {\n    value: \"data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Data Scientist\"), React.createElement(\"option\", {\n    value: \"ux\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"UX Designer\")), touched.role && errors.role && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, errors.role)), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Email:\", React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), touched.email && errors.email && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, errors.email)), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Password:\", React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), touched.password && errors.password && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, errors.password)), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Terms of Service:\", React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"termOfService\",\n    checked: values.termOfService,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), touched.termOfService && errors.termOfService && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, errors.termOfService)), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"user-form-submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nconst FormikUserForm = withFormik({\n  mapPropsToValues(values) {\n    return {\n      username: values.username || '',\n      name: values.name || '',\n      role: values.role || '',\n      email: values.email || '',\n      password: values.password || '',\n      termOfService: values.termOfService || false\n    };\n  },\n\n  //VALIDATION SCHEMA\n  validationSchema: Yup.object().shape({\n    username: Yup.string().lowercase().required('Username is required'),\n    name: Yup.string().lowercase().required('Name is required'),\n    role: Yup.string().required('Role is required'),\n    email: Yup.string().lowercase().email('Invalid e-mail').required('E-mail is a required'),\n    password: Yup.string().min(8, 'Password must be at least 6 characters and 1 number').required('Password is a required'),\n    termOfService: Yup.bool().oneOf([true], 'Terms of Service must be checked').required()\n  }),\n\n  handleSubmit(values, {\n    setStatus,\n    resetForm\n  }) {\n    // console.log(values);\n    axios.post('https://reqres.in/api/users', values).then(res => {\n      console.log('HTTP POST response: ', res);\n      setStatus(res.data);\n      resetForm();\n    });\n  }\n\n})(Form);\nexport default FormikUserForm;","map":{"version":3,"sources":["/Users/Nukae/Desktop/LAMBDA/User-Onboarding/src/components/Form.js"],"names":["React","useState","useEffect","Form","FormikForm","Field","withFormik","axios","Yup","errors","touched","status","values","users","setUsers","username","name","role","email","password","termOfService","FormikUserForm","mapPropsToValues","validationSchema","object","shape","string","lowercase","required","min","bool","oneOf","handleSubmit","setStatus","resetForm","post","then","res","console","log","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,IAAI,IAAIC,UAAjB,EAA6BC,KAA7B,EAAoCC,UAApC,QAAsD,QAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAO,YAAP;;AAEA,MAAML,IAAI,GAAG,CAAC;AAAEM,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA,MAAnB;AAA2BC,EAAAA;AAA3B,CAAD,KAAyC;AAAA,oBAC1BX,QAAQ,CAAC,EAAD,CADkB;AAAA;AAAA,QAC7CY,KAD6C;AAAA,QACtCC,QADsC;;AAGpDZ,EAAAA,SAAS,CAAC,MAAK;AACT,QAAGS,MAAH,EAAU;AACNG,MAAAA,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAWF,MAAX,CAAV,CAAR;AACH;AACJ,GAJM,EAIJ,CAACA,MAAD,CAJI,CAAT;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGD,OAAO,CAACK,QAAR,IAAoBN,MAAM,CAACM,QAA3B,IACC;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBN,MAAM,CAACM,QAA7B,CAJJ,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGL,OAAO,CAACM,IAAR,IAAgBP,MAAM,CAACO,IAAvB,IACC;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBP,MAAM,CAACO,IAA7B,CAJJ,CARF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,IAAI,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,EAGE;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,EAIE;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,EAKE;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,CAFF,EASGN,OAAO,CAACO,IAAR,IAAgBR,MAAM,CAACQ,IAAvB,IACC;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBR,MAAM,CAACQ,IAA7B,CAVJ,CAfF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGP,OAAO,CAACQ,KAAR,IAAiBT,MAAM,CAACS,KAAxB,IACC;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBT,MAAM,CAACS,KAA7B,CAJJ,CA5BF,EAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGR,OAAO,CAACS,QAAR,IAAoBV,MAAM,CAACU,QAA3B,IACC;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBV,MAAM,CAACU,QAA7B,CAJJ,CAnCF,EA0CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,eAFP;AAGE,IAAA,OAAO,EAAEP,MAAM,CAACQ,aAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOGV,OAAO,CAACU,aAAR,IAAyBX,MAAM,CAACW,aAAhC,IACC;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBX,MAAM,CAACW,aAA7B,CARJ,CA1CF,EAqDE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArDF,CAFF,CADF;AA8DD,CAxED;;AA0EA,MAAMC,cAAc,GAAGf,UAAU,CAAC;AAChCgB,EAAAA,gBAAgB,CAACV,MAAD,EAAS;AACvB,WAAO;AACLG,MAAAA,QAAQ,EAAEH,MAAM,CAACG,QAAP,IAAmB,EADxB;AAELC,MAAAA,IAAI,EAAEJ,MAAM,CAACI,IAAP,IAAe,EAFhB;AAGLC,MAAAA,IAAI,EAAEL,MAAM,CAACK,IAAP,IAAe,EAHhB;AAILC,MAAAA,KAAK,EAAEN,MAAM,CAACM,KAAP,IAAgB,EAJlB;AAKLC,MAAAA,QAAQ,EAAEP,MAAM,CAACO,QAAP,IAAmB,EALxB;AAMLC,MAAAA,aAAa,EAAER,MAAM,CAACQ,aAAP,IAAwB;AANlC,KAAP;AAQD,GAV+B;;AAWhC;AACAG,EAAAA,gBAAgB,EAAEf,GAAG,CAACgB,MAAJ,GAAaC,KAAb,CAAmB;AACnCV,IAAAA,QAAQ,EAAEP,GAAG,CAACkB,MAAJ,GACPC,SADO,GAEPC,QAFO,CAEE,sBAFF,CADyB;AAInCZ,IAAAA,IAAI,EAAER,GAAG,CAACkB,MAAJ,GACHC,SADG,GAEHC,QAFG,CAEM,kBAFN,CAJ6B;AAOnCX,IAAAA,IAAI,EAAET,GAAG,CAACkB,MAAJ,GAAaE,QAAb,CAAsB,kBAAtB,CAP6B;AAQnCV,IAAAA,KAAK,EAAEV,GAAG,CAACkB,MAAJ,GACJC,SADI,GAEJT,KAFI,CAEE,gBAFF,EAGJU,QAHI,CAGK,sBAHL,CAR4B;AAYnCT,IAAAA,QAAQ,EAAEX,GAAG,CAACkB,MAAJ,GACPG,GADO,CACH,CADG,EACA,qDADA,EAEPD,QAFO,CAEE,wBAFF,CAZyB;AAenCR,IAAAA,aAAa,EAAEZ,GAAG,CAACsB,IAAJ,GACZC,KADY,CACN,CAAC,IAAD,CADM,EACE,kCADF,EAEZH,QAFY;AAfoB,GAAnB,CAZc;;AAgChCI,EAAAA,YAAY,CAACpB,MAAD,EAAS;AAAEqB,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAT,EAAmC;AAC7C;AACA3B,IAAAA,KAAK,CAAC4B,IAAN,CAAW,6BAAX,EAA0CvB,MAA1C,EAAkDwB,IAAlD,CAAuDC,GAAG,IAAI;AAC5DC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,GAApC;AACAJ,MAAAA,SAAS,CAACI,GAAG,CAACG,IAAL,CAAT;AACAN,MAAAA,SAAS;AACV,KAJD;AAKD;;AAvC+B,CAAD,CAAV,CAwCpB/B,IAxCoB,CAAvB;AA0CA,eAAekB,cAAf","sourcesContent":["import React, {  useState, useEffect } from 'react';\nimport { Form as FormikForm, Field, withFormik } from 'formik';\nimport axios from 'axios';\nimport * as Yup from 'yup';\nimport \"../App.css\"\n\nconst Form = ({ errors, touched, status, values }) => {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() =>{\n        if(status){\n            setUsers(users => [...users, status]);\n        }\n    }, [status]);\n\n\n  return (\n    <div>\n      <h1>User Form</h1>\n      <FormikForm className='user-form'>\n        <label>\n          Username:\n          <Field type='text' name='username' />\n          {touched.username && errors.username && (\n            <p className='error'>{errors.username}</p>\n          )}\n        </label>\n        <label>\n          Name:\n          <Field type='text' name='name' />\n          {touched.name && errors.name && (\n            <p className='error'>{errors.name}</p>\n          )}\n        </label>\n        <label>\n          Role:\n          <Field component='select' name='role'>\n            <option>Select a Role</option>\n            <option value='Newbie'>Full Stack Developer</option>\n            <option value=\"dev\">Software Developer</option>\n            <option value=\"data\">Data Scientist</option>\n            <option value=\"ux\">UX Designer</option>\n          </Field>\n          {touched.role && errors.role && (\n            <p className='error'>{errors.role}</p>\n          )}\n        </label>\n        <label>\n          Email:\n          <Field type='email' name='email' />\n          {touched.email && errors.email && (\n            <p className='error'>{errors.email}</p>\n          )}\n        </label>\n        <label>\n          Password:\n          <Field type='password' name='password' />\n          {touched.password && errors.password && (\n            <p className='error'>{errors.password}</p>\n          )}\n        </label>\n        <label>\n          Terms of Service:\n          <Field\n            type='checkbox'\n            name='termOfService'\n            checked={values.termOfService}\n          />\n          {touched.termOfService && errors.termOfService && (\n            <p className='error'>{errors.termOfService}</p>\n          )}\n        </label>\n        <button type='submit' className='user-form-submit'>\n          Submit\n        </button>\n      </FormikForm>\n    </div>\n  );\n};\n\nconst FormikUserForm = withFormik({\n  mapPropsToValues(values) {\n    return {\n      username: values.username || '',\n      name: values.name || '',\n      role: values.role || '',\n      email: values.email || '',\n      password: values.password || '',\n      termOfService: values.termOfService || false,\n    };\n  },\n  //VALIDATION SCHEMA\n  validationSchema: Yup.object().shape({\n    username: Yup.string()\n      .lowercase()\n      .required('Username is required'),\n    name: Yup.string()\n      .lowercase()\n      .required('Name is required'),\n    role: Yup.string().required('Role is required'),\n    email: Yup.string()\n      .lowercase()\n      .email('Invalid e-mail')\n      .required('E-mail is a required'),\n    password: Yup.string()\n      .min(8, 'Password must be at least 6 characters and 1 number')\n      .required('Password is a required'),\n    termOfService: Yup.bool()\n      .oneOf([true], 'Terms of Service must be checked')\n      .required(),\n  }),\n\n  handleSubmit(values, { setStatus, resetForm }) {\n    // console.log(values);\n    axios.post('https://reqres.in/api/users', values).then(res => {\n      console.log('HTTP POST response: ', res);\n      setStatus(res.data);\n      resetForm();\n    });\n  },\n})(Form);\n\nexport default FormikUserForm;\n"]},"metadata":{},"sourceType":"module"}